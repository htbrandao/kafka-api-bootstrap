version: '2'

services:

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "92181:2181"

  kafka:
    container_name: kafka
    build: .
    ports:
      - "99902:9092"
    environment:
      KAFKA_CREATE_TOPICS: "topic1:1:1,topic2:1:1,topic3:1:1"
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:92181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  apiStream:
    container_name: apiStream
    environment:
      - bhvList=stream
      - groupId=gId_=apiStream
      - appId=apiStream
      # Topic 1 -> 2
      - bhv0_topic_IN=topic1
      - bhv0_topic_OUT=topic2
      - bhv0_bootstrapServers=kafka:99092,kafka:99092,kafka:99092
      # Topic 2 -> 3
      - bhv1_topic_IN=topic2
      - bhv1_topic_OUT=topic3
      - bhv1_bootstrapServers=kafka:99092,kafka:99092,kafka:99092
    image: kafka_client_bootstrap:1.0.0

  apiProducer:
    container_name: apiProducer
    environment:
      - bhvList=producer
      - groupId=gId_=apiProducer
      - appId=apiProducer
      - bhv0_topic=topic1
      - bhv0_bootstrapServers=kafka:99092
      - bhv0_sleep=200
    image: kafka_client_bootstrap:1.0.0

  apiConsumer:
    container_name: apiConsumer
    environment:
     - bhvList=consumer;consumer;consumer
     - groupId=apiConsumer
     - appId=apiConsumer
     # Thread 0
     - bhv0_topic=topic1
     - bhv0_bootstrapServers=kafka:99092,kafka:99092,kafka:99092
     # Thread 1
     - bhv1_topic=topic2
     - bhv1_bootstrapServers=kafka:99092,kafka:99092,kafka:99092
     # Thread 2
     - bhv2_topic=topic3
     - bhv2_bootstrapServers=kafka:99092,kafka:99092,kafka:99092
   image: kafka_client_bootstrap:1.0.0
